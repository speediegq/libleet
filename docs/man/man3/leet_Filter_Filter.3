.TH "leet::Filter::Filter" 3 "Version 0.1" "libleet" \" -*- nroff -*-
.ad l
.nh
.SH NAME
leet::Filter::Filter \- \fBFilter\fP, can be used to find an event ID by functions that make use of it\&.  

.SH SYNOPSIS
.br
.PP
.PP
\fC#include <libleet\&.hpp>\fP
.SS "Public Attributes"

.in +1c
.ti -1c
.RI "std::vector< std::string > \fBnotSenders\fP"
.br
.ti -1c
.RI "std::vector< std::string > \fBSenders\fP"
.br
.ti -1c
.RI "std::vector< std::string > \fBnotRooms\fP"
.br
.ti -1c
.RI "std::vector< std::string > \fBRooms\fP"
.br
.ti -1c
.RI "std::vector< std::string > \fBFields\fP = { 'type', 'content', 'sender' }"
.br
.ti -1c
.RI "\fBint\fP \fBLimit\fP = 0"
.br
.in -1c
.SH "Detailed Description"
.PP 
\fBFilter\fP, can be used to find an event ID by functions that make use of it\&. 
.SH "Member Data Documentation"
.PP 
.SS "std::vector<std::string> leet::Filter::Filter::Fields = { 'type', 'content', 'sender' }"

.SS "\fBint\fP leet::Filter::Filter::Limit = 0"

.SS "std::vector<std::string> leet::Filter::Filter::notRooms"

.SS "std::vector<std::string> leet::Filter::Filter::notSenders"

.SS "std::vector<std::string> leet::Filter::Filter::Rooms"

.SS "std::vector<std::string> leet::Filter::Filter::Senders"


.SH "Author"
.PP 
Generated automatically by Doxygen for libleet from the source code\&.
