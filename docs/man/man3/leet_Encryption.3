.TH "leet::Encryption" 3 "Version 0.1" "libleet" \" -*- nroff -*-
.ad l
.nh
.SH NAME
leet::Encryption \- Class which hopefully allows you to safely handle encryption and Olm memory\&.  

.SH SYNOPSIS
.br
.PP
.PP
\fC#include <libleet\&.hpp>\fP
.SS "Public Member Functions"

.in +1c
.ti -1c
.RI "\fBvoid\fP \fBdestroy\fP ()"
.br
.in -1c
.SS "Public Attributes"

.in +1c
.ti -1c
.RI "\fBleet::olmAccount\fP \fBaccount\fP"
.br
.ti -1c
.RI "\fBbool\fP \fBhasUploadedKeys\fP {\fBfalse\fP}"
.br
.ti -1c
.RI "\fBbool\fP \fBhasCreatedAccount\fP {\fBfalse\fP}"
.br
.ti -1c
.RI "\fBbool\fP \fBCleaned\fP = \fBfalse\fP"
.br
.in -1c
.SH "Detailed Description"
.PP 
Class which hopefully allows you to safely handle encryption and Olm memory\&. 
.SH "Member Function Documentation"
.PP 
.SS "\fBvoid\fP leet::Encryption::destroy ()\fC [inline]\fP"

.SH "Member Data Documentation"
.PP 
.SS "\fBleet::olmAccount\fP leet::Encryption::account"

.SS "\fBbool\fP leet::Encryption::Cleaned = \fBfalse\fP"

.SS "\fBbool\fP leet::Encryption::hasCreatedAccount {\fBfalse\fP}"

.SS "\fBbool\fP leet::Encryption::hasUploadedKeys {\fBfalse\fP}"


.SH "Author"
.PP 
Generated automatically by Doxygen for libleet from the source code\&.
