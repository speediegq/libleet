.TH "leet::User::Credentials" 3 "Version 0.1" "libleet" \" -*- nroff -*-
.ad l
.nh
.SH NAME
leet::User::Credentials \- \fBCredentials\fP class which contains fields passed to login requests\&.  

.SH SYNOPSIS
.br
.PP
.PP
\fC#include <libleet\&.hpp>\fP
.SS "Public Member Functions"

.in +1c
.ti -1c
.RI "\fBvoid\fP \fBclearCredentials\fP ()"
.br
.in -1c
.SS "Public Attributes"

.in +1c
.ti -1c
.RI "std::string \fBUsername\fP"
.br
.ti -1c
.RI "std::string \fBPassword\fP"
.br
.ti -1c
.RI "std::string \fBdisplayName\fP"
.br
.ti -1c
.RI "std::string \fBdeviceID\fP"
.br
.ti -1c
.RI "std::string \fBHomeserver\fP"
.br
.ti -1c
.RI "\fBbool\fP \fBrefreshToken\fP"
.br
.ti -1c
.RI "std::string \fBToken\fP"
.br
.ti -1c
.RI "\fBint\fP \fBIdentifier\fP"
.br
.ti -1c
.RI "\fBint\fP \fBType\fP"
.br
.in -1c
.SH "Detailed Description"
.PP 
\fBCredentials\fP class which contains fields passed to login requests\&. 

\fBCredentials\fP class which contains fields passed to login requests\&. The client should set these fields in an object and pass that to a login function\&. 
.SH "Member Function Documentation"
.PP 
.SS "\fBvoid\fP leet::User::Credentials::clearCredentials ()\fC [inline]\fP"

.SH "Member Data Documentation"
.PP 
.SS "std::string leet::User::Credentials::deviceID"

.SS "std::string leet::User::Credentials::displayName"

.SS "std::string leet::User::Credentials::Homeserver"

.SS "\fBint\fP leet::User::Credentials::Identifier"

.SS "std::string leet::User::Credentials::Password"

.SS "\fBbool\fP leet::User::Credentials::refreshToken"

.SS "std::string leet::User::Credentials::Token"

.SS "\fBint\fP leet::User::Credentials::Type"

.SS "std::string leet::User::Credentials::Username"


.SH "Author"
.PP 
Generated automatically by Doxygen for libleet from the source code\&.
